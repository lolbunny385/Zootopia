---
# tasks file for roles/postgresql

- name: Set Locales
  shell: '{{ item }}'
  with_items:
    - 'update-locale LANGUAGE=en_US.UTF-8'
    - 'update-locale LANG=en_US.UTF-8'
    - 'update-locale LC_ALL=en_US.UTF-8'
    - 'locale-gen en_US.UTF-8'
    - 'dpkg-reconfigure locales'

- name: Install PostgreSQL and pip
  apt: 
    pkg: 
      - postgresql
      - python-pip
      - postgresql-server-dev-9.3
      - python-dev
    state: installed 
    update_cache: true

- name: Initialize DB cluster
  shell:  pg_createcluster '{{ postgresql_version }}' main
  args: 
    creates: /etc/postgresql/9.3/main/start.conf

# The Default configuration is ok. If we make an external DB we need to change it
#- name: Copy Authenication Configuration
#  when: postgresqlinstalled|success
#  copy: src=pg_hba.conf dest=/etc/postgresql/{{ '{{' }} postgresql_version {{ '}}' }}/main/pg_hba.conf owner=root group=root
#  register: configured

- name: Start PGSQL
  service: name=postgresql state=started enabled=yes

# Takes settings from cloudera. Real consideration is needed before any real deployment
- name: Copy Performance Configuration
  copy: 
    src: postgresql.conf 
    dest: /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
    owner: root
    group: root

- name: Install psycopg2
  pip: name=psycopg2

# Requires Python package psycopg2
- name: Create Database Users
  postgresql_user: 
    name: '{{ item }}' 
    password: '{{ item }}_password'
    encrypted: true
  with_items:
    - "{{ db_services }}"
  become: yes
  become_user: postgres

- name: Create DB Tables
  postgresql_db: 
    name: '{{ item }}' 
    owner: '{{ item }}'
    encoding: UTF8
  with_items:
    - "{{ db_services }}"
  become: yes
  become_user: postgres

- name: additional shell configuration
  shell: psql -c 'ALTER DATABASE hive SET standard_conforming_strings = off;'
  become: yes
  become_user: postgres

- name: Reload DB
  service: 
    name: postgresql 
    state: reloaded
